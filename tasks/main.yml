---
- name: Ensure that the pam packages are installed
  tags: pam
  become: true
  yum:
    name: "{{ item }}"
    state: present
  register: pam_yum
  loop:
    - libpwquality
    - pam

- name: Attempting to overlay pam limits configurations
  tags: pam
  become: true
  pam_limits:
    backup: "{{ item.backup|default('no') }}"
    comment: "{{ item.comment|default(omit) }}"
    dest: /etc/security/limits.conf
    domain: "{{ item.domain }}"
    limit_item: "{{ item.limit_item }}"
    limit_type: "{{ item.limit_type }}"
    use_max: "{{ item.use_max|default('no') }}"
    use_min: "{{ item.use_min|default('no') }}"
    value: "{{ item.value }}"
  loop: "{{ pam_limits_conf }}"
  loop_control:
    label: "{{ item.domain }}"
  when:
    - item.domain is defined
    - item.limit_item is defined
    - item.limit_type is defined
    - item.value is defined
    - pam_yum is success

- name: Attempting to overlay pam limits.d configurations
  tags: pam
  become: true
  pam_limits:
    backup: "{{ item.1.backup|default('no') }}"
    comment: "{{ item.1.comment|default(omit) }}"
    dest: "/etc/security/limits.d/{{ item.0.order }}-{{ item.0.file }}.conf"
    domain: "{{ item.1.domain }}"
    limit_item: "{{ item.1.limit_item }}"
    limit_type: "{{ item.1.limit_type }}"
    use_max: "{{ item.1.use_max|default('no') }}"
    use_min: "{{ item.1.use_min|default('no') }}"
    value: "{{ item.1.value }}"
  loop: "{{ pam_limits_d|subelements('limits') }}"
  loop_control:
    label: "{{ item.0.file }}"
  when:
    - item.1.domain is defined
    - item.1.limit_item is defined
    - item.1.limit_type is defined
    - item.1.value is defined
    - pam_yum is success

- name: Attempting to overlay pam_pwquality configurations
  tags: pam
  become: true
  template:
    src: pwquality.conf.j2
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: 0644
  when: pam_yum is success
...
